version: "3.9"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: djouman
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d djouman"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    volumes:
      - redisdata:/data

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - djouman/settings/.env
    environment:
      DJANGO_SETTINGS_MODULE: djouman.settings.local
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: djouman
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      CELERY_ENABLED: "true"
      USE_WHITENOISE: "true"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      # Pour Swagger logo en local
      # STATICFILES_DIRS contient ./assets dans settings
    volumes:
      - .:/app:cached
      - staticfiles:/app/staticfiles
      - media:/app/media
      - ./assets:/app/assets
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: >
      gunicorn djouman.asgi:application -k uvicorn.workers.UvicornWorker -c ops/gunicorn.conf.py
    ports:
      - "8000:8000"

  celery:
    build: .
    env_file:
      - djouman/settings/.env
    environment:
      DJANGO_SETTINGS_MODULE: djouman.settings.local
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: djouman
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      CELERY_ENABLED: "true"
      REDIS_URL: redis://redis:6379/0
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: bash -lc "python manage.py migrate --noinput && celery -A djouman worker -l info"

  beat:
    build: .
    env_file:
      - djouman/settings/.env
    environment:
      DJANGO_SETTINGS_MODULE: djouman.settings.local
      CELERY_ENABLED: "true"
      REDIS_URL: redis://redis:6379/0
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
    depends_on:
      redis:
        condition: service_started
    command: celery -A djouman beat -l info

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./ops/nginx.conf:/etc/nginx/nginx.conf:ro
      - staticfiles:/static:ro
      - media:/media:ro
    depends_on:
      - web
    ports:
      - "80:80"

  # --- Observabilit√© ---
  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "16686:16686"   # UI
      - "14268:14268"
      - "14250:14250"
    environment:
      COLLECTOR_OTLP_ENABLED: "true"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.103.1
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./ops/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # gRPC OTLP
      - "4318:4318"   # HTTP OTLP
    depends_on:
      - jaeger

volumes:
  pgdata:
  redisdata:
  staticfiles:
  media:
